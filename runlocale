#!/usr/bin/perl
# runlocale
# A script to set all LC_* and LANG* variables to one setting 
# and then exec a specified command
# Copyright (C) Eskild Hustvedt 2006
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

use strict;
use warnings;

die("First option must be a language code\n") unless(defined($ARGV[0]) and length($ARGV[0]));
die("Second option must be the command to exec\n") unless(defined($ARGV[1]) and length($ARGV[1]));

my $NewLang = $ARGV[0];
shift(@ARGV);
foreach(keys(%ENV)) {
	next unless /^(LC_|LANG)/;
	$ENV{$_} = $NewLang;
}
foreach (qw(LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION LC_ALL))
{
	if (!defined($ENV{$_}) || $ENV{$_} ne $NewLang)
	{
		$ENV{$_} = $NewLang;
	}
}
if(defined($ENV{FORCELANG})) {
	$ENV{LANGUAGE} = $ENV{FORCELANG};
}
exec(@ARGV) or die("Unable to exec @ARGV: $!\n");
